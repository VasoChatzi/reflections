These are my reflections.

Plus, this is the file I am going to use for version control practice.



* How did viewing a diff between two versions of a file help you see the bug that was introduced?

I knew which lines to foccuss on, the unchanged lines were obviously not 
where the problem was.

* How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
 I can see when something was broken
 I can see who changed what.
 I don't need to manually save working versions.


* What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having 
versions automatically saved, like Google Docs does?
  For code, I definetelly want control, since I would like every committed version to compile.

* Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like 
Google Docs, treat each file separately?
  Because they have different purposes. Treating all the files together is good for code.

* Now that you have your workspace set up, what do you want to try using Git for?
I want to continue with my Machine Learning course.

